nextflow.enable.dsl=2
cleanup=true

includeConfig "$baseDir/modules/config/params.config"

singularity {
  enabled = true
  singularity.envWhitelist = ["SINGULARITY_TMPDIR"]
  runOptions = '--bind /orfeo:/orfeo --bind $SINGULARITY_TMPDIR:/tmp'
}

process {
   executor='slurm'
   queue='THIN'
   errorStrategy = 'finish'
}

process {
  withName: 'VEP_ANNOTATE' {
    time='12h'
    container = 'https://depot.galaxyproject.org/singularity/ensembl-vep:110.1--pl5321h2a3209d_0'
    memory = '20 GB'
  }

  withName: 'VCF2MAF' {
    container = 'https://depot.galaxyproject.org/singularity/vcf2maf%3A1.6.20--0'
  }

  withName: 'MAFTOOLS' {
    memory = '5 GB'
    container = 'https://depot.galaxyproject.org/singularity/bioconductor-maftools%3A2.8.0--r41hd029910_0'
    ext.args   = {[
        "rmOutlier": params.maftools_rmOutlier,
        "addStat": params.maftools_addStat,
        "titvRaw": params.maftools_titvRaw,
        "showBarcodes": params.maftools_showBarcodes,
        "dashboard": params.maftools_dashboard,
        "top": params.maftools_top,
        "minMut": params.maftools_minMut,
        "genes": params.maftools_genes,
        "altered": params.maftools_altered,
        "removeNonMutated": params.maftools_removeNonMutated
    ]}
  }
}
 
process {
  withName: 'VARTRIX' {
    memory='50 GB'
    time='2h'
    container = 'https://depot.galaxyproject.org/singularity/vartrix%3A1.1.22--h27d5293_3'
    ext.args   = {[
        "scoring": params.vartrix_scoring_method,
        "padding": params.vartrix_padding,
        "umi": params.vartrix_umi
    ]}
  } 
}

process {
  withName: 'RDS_PROCESSING' {
    memory='50 GB'
    time='1h'
    container = 'docker://lvaleriani/cnaqc:v5'
  }
  
  withName: 'VIBER' {
    memory='128 GB'
    time='2h'
    container='file:///fast/cdslab/ebusca00/singularity/cdslab.sif'
    ext.args = {[
      "K" : params.viber_K,
      "samples" : params.viber_samples,
      "alpha_0" : params.viber_alpha_0,
      "a_0" : params.viber_a_0,
      "b_0" : params.viber_b_0,
      "maxIter" : params.viber_maxIter,
      "epsilon_conv" : params.viber_epsilon_conv,
      "q_init" : params.viber_q_init,
      "trace" : params.viber_trace,
      "binomial_cutoff" : params.viber_binomial_cutoff,
      "dimensions_cutoff" : params.viber_dimensions_cutoff,
      "pi_cutoff" : params.viber_pi_cutoff,
      "re_assign" : params.viber_re_assign,
      "mode": params.mode
    ]}
  }

  withName: 'PYCLONEVI' {
    memory='50 GB'
    time='2h'
    container = 'https://depot.galaxyproject.org/singularity/pyclone-vi%3A0.1.3--pyhca03a8a_0'
    ext.args   = {[
      "n_cluster": params.pyclonevi_n_cluster,
      "density": params.pyclonevi_density,
      "n_grid_point": params.pyclonevi_n_grid_point,
      "n_restarts": params.pyclonevi_n_restarts,
      "mode": params.mode
    ]}
  }

  withName: "MOBSTERh" {
    memory='128 GB'
    time='2h'
    container='file:///fast/cdslab/ebusca00/singularity/cdslab.sif'
    ext.args = {[
      "K" : params.mobster_K,
      "samples" : params.mobster_samples,
      "init" : params.mobster_init,
      "tail" : params.mobster_tail,
      "epsilon" : params.mobster_epsilon,
      "maxIter" : params.mobster_maxIter,
      "fit_type" : params.mobster_fit_type,
      "seed" : params.mobster_seed,
      "model_selection" : params.mobster_model_selection,
      "trace" : params.mobster_trace,
      "parallel" : params.mobster_parallel,
      "pi_cutoff" : params.mobster_pi_cutoff,
      "n_cutoff" : params.mobster_n_cutoff,
      "auto_setup" : params.mobster_auto_setup,
      "silent" : params.mobster_silent
    ]}
  }

  withName: "CTREE" {
    memory='50 GB'
    time='2h'
    container='file:///fast/cdslab/ebusca00/singularity/cdslab.sif'
    ext.args = {[
      "sspace_cutoff" : params.ctree_sspace_cutoff,
      "n_sampling" : params.ctree_n_sampling,
      "store_max" : params.ctree_store_max,
      "mode": params.mode
    ]}
  }

  withName: "JOINT_FIT" {
    memory='50 GB'
    time='2h'
    container='file:///fast/cdslab/ebusca00/singularity/cdslab.sif'
  }

  withName: 'SIG_PROFILER' {
    time='5h'
    memory='100 GB'
    //container = "docker://lculibrk/sigprofiler:latest"
    container = "docker://dceoy/sigprofiler"
    ext.args   = {[
      "reference_genome": params.sigprofiler_reference_genome,
      "exome": params.sigprofiler_exome,
      "bed_file": params.sigprofiler_bed_file,
      "chrom_based": params.sigprofiler_chrom_based,
      "plot": params.sigprofiler_plot,
      "tsb_stat": params.sigprofiler_tsb_stat,
      "seqInfo": params.sigprofiler_seqInfo,
      "cushion": params.sigprofiler_cushion,
      "volume": params.sigprofiler_volume,
      "input_type": params.sigprofiler_input_type,
      "context_type": params.sigprofiler_context_type,
      "minimum_signatures": params.sigprofiler_minimum_signatures,
      "maximum_signatures": params.sigprofiler_maximum_signatures,
      "nmf_replicates": params.sigprofiler_nmf_replicates,
      "resample": params.sigprofiler_resample,
      "seeds": params.sigprofiler_seeds,
      "matrix_normalization": params.sigprofiler_matrix_normalization,
      "nmf_init": params.sigprofiler_nmf_init,
      "min_nmf_iterations": params.sigprofiler_min_nmf_iterations,
      "max_nmf_iterations": params.sigprofiler_max_nmf_iterations,
      "nmf_test_conv": params.sigprofiler_nmf_test_conv,
      "nmf_tolerance": params.sigprofiler_nmf_tolerance,
      "cpu": params.sigprofiler_cpu,
      "gpu": params.sigprofiler_gpu,
      "batch_size": params.sigprofiler_batch_size,
      "stability": params.sigprofiler_stability,
      "min_stability": params.sigprofiler_min_stability,
      "combined_stability": params.sigprofiler_combined_stability,
      "cosmic_version": params.sigprofiler_cosmic_version,
      "de_novo_fit_penalty": params.sigprofiler_de_novo_fit_penalty,
      "nnls_add_penalty": params.sigprofiler_nnls_add_penalty,
      "nnls_remove_penalty": params.sigprofiler_nnls_remove_penalty,
      "initial_remove_penalty": params.sigprofiler_initial_remove_penalty,
      "refit_denovo_signatures": params.sigprofiler_refit_denovo_signatures,
      "make_decomposition_plots": params.sigprofiler_make_decomposition_plots,
      "collapse_to_SBS96": params.sigprofiler_collapse_to_SBS96,
      "get_all_signature_matrices": params.sigprofiler_get_all_signature_matrices,
      "export_probabilities": params.sigprofiler_export_probabilities
    ]}
  }

  withName: 'SPARSE_SIGNATURES' {
    time = '5h'
    memory = '100 GB'
    cpus = 24
    maxForks = 20

    container = 'https://depot.galaxyproject.org/singularity/bioconductor-sparsesignatures%3A2.12.0--r43hdfd78af_0'
    ext.args = {[
      "K" : params.sparsesignatures_K,
      "background_signature" : params.sparsesignatures_background_signature,
      "beta" : params.sparsesignatures_beta,
      "normalize_counts" : params.sparsesignatures_normalize_counts,
      "nmf_runs" : params.sparsesignatures_nmf_runs,
      "iterations" : params.sparsesignatures_iterations,
      "max_iterations_lasso" : params.sparsesignatures_max_iterations_lasso,
      "num_processes" : params.sparsesignatures_num_processes,
      "cross_validation_entries" : params.sparsesignatures_cross_validation_entries,
      "cross_validation_repetitions" : params.sparsesignatures_cross_validation_repetitions,
      "cross_validation_iterations" : params.sparsesignatures_cross_validation_iterations,
      "lambda_values_alpha" : params.sparsesignatures_lambda_values_alpha,
      "lambda_values_beta" : params.sparsesignatures_lambda_values_beta,
      "lambda_rate_alpha" : params.sparsesignatures_lambda_rate_alpha,
      "verbose": params.sparsesignatures_verbose,
      "seed": params.sparsesignatures_seed
    ]}
  }

  withName: 'GET_POSITIONS' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '50 GB'
    time = '1h'
    errorStrategy = 'finish'
  }

  withName: 'JOIN_POSITIONS' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '50 GB'
    time = '1h'
    errorStrategy = 'finish'
  }

  withName: 'BCFTOOLS_MPILEUP' {
    container = 'https://depot.galaxyproject.org/singularity/bcftools%3A1.9--ha228f0b_4'
    memory = '50 GB'
    time = '1h'
    errorStrategy = 'finish'
  }

  withName: 'VCF_PROCESSING' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '50 GB'
    time = '1h'
    errorStrategy = 'finish'
    ext.args = {[
      "filter_mutations": params.vcf_filter_mutations
    ]}
  }

  withName: 'CNA_PROCESSING' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '50 GB'
    time = '1h'
    errorStrategy = 'finish'
  }

  withName: 'JOIN_CNAQC' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '50 GB'
    time = '2h'
    errorStrategy = 'finish'
  }

  withName: 'CNAQC' {
    container = 'docker://lvaleriani/cnaqc:v5'
    memory = '100 GB'
    time = '2h'
    errorStrategy = 'finish'
    ext.args = {[
      "matching_strategy": params.cnaqc_matching_strategy,
      "karyotypes": params.cnaqc_karyotypes,
      "min_karyotype_size":params.cnaqc_min_karyotype_size,
      "min_absolute_karyotype_mutations":params.cnaqc_min_absolute_karyotype_mutations,
      "p_binsize_peaks":params.cnaqc_p_binsize_peaks,
      "matching_epsilon":params.cnaqc_matching_epsilon,
      "purity_error":params.cnaqc_purity_error,
      "vaf_tolerance":params.cnaqc_vaf_tolerance,
      "n_bootstrap":params.cnaqc_n_bootstrap,
      "kernel_adjust":params.cnaqc_kernel_adjust,
      "kde":params.cnaqc_kde,
      "starting_state_subclonal_evolution":params.cnaqc_starting_state_subclonal_evolution,
      "cluster_subclonal_CCF":params.cnaqc_cluster_subclonal_CCF,
      "muts_per_karyotype":params.cnaqc_muts_per_karyotype,
      "cutoff_QC_PASS":params.cnaqc_cutoff_QC_PASS,
      "method":params.cnaqc_method,
      "plot_cn":params.cnaqc_plot_cn
    ]}
  }
}
